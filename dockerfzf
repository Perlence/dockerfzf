#!/bin/bash
# A simple script to select Docker containers and images with fzf for bulk operations

# Test if fzf and docker are in PATH
if ! which docker fzf > /dev/null 2>&1
then
  echo "error: fzf is not installed"
  exit 1
fi

FZF='fzf --reverse'
FZFM='fzf --reverse -m'

case $1 in
stop|kill)
  # Select and stop/kill containers by their ID
  docker ps | tail -n +2 | $FZFM | awk '{print $1}' | xargs -r docker ${@:1}
  ;;
start|rm|attach|logs)
  # Select and start/rm/attach/log containers by their ID
  ID=$(docker ps -a | tail -n +2 | $FZFM | awk '{print $1}')
  [ -n "$ID" ] && exec docker ${@:1} $ID
  ;;
inspect)
  # Select and inspect container by its ID
  ID=$(docker ps -a | tail -n +2 | $FZF | awk '{print $1}')
  [ -n "$ID" ] && docker ${@:1} $ID 2>&1 | less
  ;;
inspecti)
  # Select and inspect image by its ID
  ID=$(docker images | tail -n +2 | $FZF | awk '{print $3}')
  [ -n "$ID" ] && docker inspect ${@:2} $ID 2>&1 | less
  ;;
rmi)
  # Select and remove images by their ID
  docker images | tail -n +2 | $FZFM | awk '{print $3}' | xargs -r docker ${@:1}
  ;;
rmt)
  # Select and remove images by their tags
  docker images | tail -n +2 | $FZFM | awk '{print $1 ":" $2}' | xargs -r docker rmi ${@:2}
  ;;
volume)
  case $2 in
  rm)
    # Select and remove volumes by their ID
    docker volume ls | tail -n +2 | $FZFM | awk '{print $2}' | xargs -r docker ${@:1}
    ;;
  inspect)
    # Select and inspect volume by its ID
    ID=$(docker volume ls | tail -n +2 | $FZF | awk '{print $2}')
    [ -n "$ID" ] && docker ${@:1} $ID 2>&1 | less
    ;;
  *)
    echo "error: unsupported command '$@'"
    exit 1
    ;;
  esac
  ;;
network)
  case $2 in
  rm)
    # Select and remove networks by their ID
    docker network ls | tail -n +2 | $FZFM | awk '{print $1}' | xargs -r docker ${@:1}
    ;;
  inspect)
    # Select and inspect network by its ID
    ID=$(docker network ls | tail -n +2 | $FZF | awk '{print $1}')
    [ -n "$ID" ] && docker ${@:1} $ID 2>&1 | less
    ;;
  *)
    echo "error: unsupported command '$@'"
    exit 1
    ;;
  esac
  ;;
*)
  echo "error: unsupported command '$@'"
  exit 1
  ;;
esac
